# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master, staging]
  pull_request:
    branches: [ staging ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm ci
    - name: Build App
      run: npm run build --if-present
    - name: Unit Tests
      run: npm test
    - name: create env file
      run: |
        touch .env.development
        echo ENGINE_API_KEY =${{ secrets.ENGINE_API_KEY }} >> .env.development
        echo REACT_APP_STAGE_API_KEY=${{ secrets.REACT_APP_STAGE_API_KEY }} >> .env.development
        echo REACT_APP_STAGE_APP_ID=${{ secrets.REACT_APP_STAGE_APP_ID }} >> .env.development
        echo REACT_APP_STAGE_AUTH_DOMAIN=${{ secrets.REACT_APP_STAGE_AUTH_DOMAIN }} >> .env.development
        echo REACT_APP_STAGE_DATABASE_URL=${{ secrets.REACT_APP_STAGE_DATABASE_URL }} >> .env.development
        echo REACT_APP_STAGE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_STAGE_MESSAGING_SENDER_ID }} >> .env.development
        echo REACT_APP_STAGE_PROJECT_ID=${{ secrets.REACT_APP_STAGE_PROJECT_ID }} >> .env.development
        echo REACT_APP_STAGE_STORAGE_BUCKET=${{ secrets.REACT_APP_STAGE_STORAGE_BUCKET }} >> .env.development
    - name: E2E Tests
      run: docker-compose up --build --abort-on-container-exit
